# Generated by Django 5.2.6 on 2025-09-15 02:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField(help_text='Announcement text to be displayed')),
                ('display_on_home', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Announcement',
                'verbose_name_plural': 'Announcements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('category', models.CharField(choices=[('climbing', 'Climbing'), ('kayaking', 'Kayaking'), ('skiing', 'Skiing'), ('hiking', 'Hiking'), ('social', 'Social'), ('general', 'General')], default='general', help_text='Category of the event used for styling and filtering.', max_length=50)),
                ('image', models.ImageField(blank=True, help_text='Optional image illustrating the event.', null=True, upload_to='events/')),
                ('description', models.TextField()),
                ('meeting_datetime', models.DateTimeField(blank=True, help_text='Optional date/time for a pre-trip meeting to organise gear', null=True)),
                ('meeting_location', models.CharField(blank=True, help_text='Location for the pre-trip meeting, if any', max_length=200)),
                ('emergency_contact_details', models.CharField(blank=True, help_text='Emergency contact details provided by the leader', max_length=255)),
                ('registration_method', models.CharField(choices=[('fcfs', 'First Come First Served'), ('picky', 'Trip Leader Picks')], default='fcfs', help_text='Determines whether participants are auto-accepted or manually selected', max_length=10)),
                ('trip_capacity', models.IntegerField(default=-1, help_text='Maximum number of participants for FCFS trips; leave blank or -1 for unlimited or picky trips')),
                ('trip_location', models.CharField(max_length=200)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('difficulty_level', models.CharField(choices=[('none', 'None'), ('easy', 'Easy'), ('moderate', 'Moderate'), ('hard', 'Hard')], default='none', help_text="Difficulty level to give participants an idea of what's required", max_length=20)),
                ('estimated_costs', models.CharField(blank=True, help_text='Estimated costs for the trip (e.g. $50 fuel)', max_length=100)),
                ('requested_information', models.CharField(blank=True, help_text='Information to request from participants (e.g. prior experience)', max_length=200)),
                ('include_prior_experience_checkbox', models.BooleanField(default=True, help_text='Include a checkbox asking about prior experience')),
                ('regular_recurring', models.BooleanField(default=False, help_text='Mark this as a regular recurring series of trips')),
                ('approval_status', models.CharField(choices=[('approved', 'Approved'), ('pending', 'Pending')], default='pending', help_text='Whether the trip has been approved for publication', max_length=10)),
                ('comment', models.TextField(blank=True, help_text='Comment describing the changes made when editing')),
                ('contact_details', models.CharField(help_text='Preferred contact details for the trip leader (hidden from non-members)', max_length=200)),
                ('fitness_required', models.CharField(blank=True, max_length=200)),
                ('experience_required', models.CharField(blank=True, max_length=200)),
                ('spots_total', models.PositiveIntegerField(default=0)),
                ('spots_available', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('emergency_contact', models.CharField(blank=True, max_length=200)),
                ('membership_signup_date', models.DateField(auto_now_add=True)),
                ('membership_expiry_date', models.DateField(blank=True, null=True)),
                ('membership_refresh_date', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventSignup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('experience', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signups', to='main.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_signups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
                'unique_together': {('event', 'email')},
            },
        ),
    ]
